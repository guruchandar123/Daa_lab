
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {
            String line = br.readLine();
            String[] tokens = line.split(" ");

            // Create an ArrayList to store the integers
            ArrayList<Integer> array = new ArrayList<>();

            // Parse the tokens into integers and add to the array
            for (String token : tokens) {
                array.add(Integer.parseInt(token));
            }

            int[] arr = new int[array.size()];
            int idx = 0;
            for (int i : array) arr[idx++] = i;

            System.out.println(new Solution().minJumps(arr));
            // System.out.println("~");
        }
    }
}



class Solution {
    public int minJumps(int[] arr) {
        int n = arr.length;
       
        if (n == 1) {
            return 0;
        }
       
        if (arr[0] == 0) {
            return -1;
        }
       
        int jumps = 0;
        int currentEnd = 0;
        int farthest = 0;
       
        for (int i = 0; i < n; i++) {
            farthest = Math.max(farthest, i + arr[i]);
           
            if (i == currentEnd) {
                jumps++;
                currentEnd = farthest;
               
                if (currentEnd >= n - 1) {
                    return jumps;
                }
            }
        }
       
        return -1;
    }

    public static void main(String[] args) {
        Solution obj = new Solution();
       
       
        int[] arr1 = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
        System.out.println(obj.minJumps(arr1));
       
        int[] arr2 = {1, 4, 3, 2, 6, 7};
        System.out.println(obj.minJumps(arr2));
       
        int[] arr3 = {0, 10, 20};
        System.out.println(obj.minJumps(arr3));
    }
}
